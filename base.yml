---
- hosts: all
  vars:
    gnome_extensions:
      - name: "user-theme@gnome-shell-extensions.gcampax.github.com"
        url: ""
        version: ""
      - name: "dash-to-panel@jderose9.github.com"
        url: "https://extensions.gnome.org/extension-data/dash-to-paneljderose9.github.com.v39.shell-extension.zip"
        version: v39
      - name: "arc-menu@linxgem33.com"
        url: "https://extensions.gnome.org/extension-data/arc-menulinxgem33.com.v48.shell-extension.zip"
        version: v48
  tasks:
    - name: Get Fedora version
      shell: rpm -E %fedora
      args:
        warn: false
      changed_when: false
      register: fedora_version
    - name: Add RPM Fusion repo
      dnf:
        name:
          - https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-{{ fedora_version.stdout }}.noarch.rpm
          - https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-{{ fedora_version.stdout }}.noarch.rpm
        state: present
      become: yes
    - name: Add google-chrome repo
      yum_repository:
        name: google-chrome
        description: google-chrome repo
        baseurl: http://dl.google.com/linux/chrome/rpm/stable/x86_64
        gpgcheck: yes
        gpgkey: https://dl.google.com/linux/linux_signing_key.pub
      become: yes
    - name: Upgrade all packages
      dnf:
        name: "*"
        state: latest
      become: yes
    - name: Install packages
      dnf:
        name:
          - firefox
          - google-chrome-stable
          - terminator
          - vim
          - gimp
          - inkscape
          - gnome-tweaks
          - gparted
          - wine
          - python3-psutil
          - neofetch
          - youtube-dl
          - unrar
          - mpv
          - qbittorrent
          - cura
          - NetworkManager-openvpn
          - NetworkManager-openvpn-gnome
        state: present
      become: yes
    - name: Enable and start sshd
      systemd:
        name: sshd
        state: started
        enabled: yes
      become: yes
    - name: Setup keyboard layouts
      dconf:
        key: "/org/gnome/desktop/input-sources/sources"
        value: "[('xkb', 'cz'), ('xkb', 'us'), ('xkb', 'sk+qwerty')]"
        state: present
    - name: Disable auto screen lock
      dconf:
        key: "/org/gnome/desktop/screensaver/lock-enabled"
        value: "false"
        state: present
    - name: Enable tap-to-click
      dconf:
        key: "/org/gnome/desktop/peripherals/touchpad/tap-to-click"
        value: "true"
        state: present
    - name: Set clock format
      dconf:
        key: "/org/gnome/desktop/interface/clock-format"
        value: "'24h'"
        state: present
    - name: Set alt-tab
      dconf:
        key: "/org/gnome/desktop/wm/keybindings/switch-windows"
        value: "['<Alt>Tab']"
        state: present
    - name: Set alt-tab backward
      dconf:
        key: "/org/gnome/desktop/wm/keybindings/switch-windows-backward"
        value: "['<Shift><Alt>Tab']"
        state: present
    - name: Set super-tab
      dconf:
        key: "/org/gnome/desktop/wm/keybindings/switch-applications"
        value: "['<Super>Tab']"
        state: present
    - name: Set super-tab backward
      dconf:
        key: "/org/gnome/desktop/wm/keybindings/switch-applications-backward"
        value: "['<Shift><Super>Tab']"
        state: present
    - name: Create local extensions directory
      file:
        path: ~/.local/share/gnome-shell/extensions
        state: directory
    - name: Create extensions subdirs
      file:
        path: "~/.local/share/gnome-shell/extensions/{{ item.name }}"
        state: directory
      with_items:
        - "{{ gnome_extensions }}"
      when: item.url != ""
    - name: Download extensions
      unarchive:
        src: "{{ item.url }}"
        dest: "~/.local/share/gnome-shell/extensions/{{ item.name }}"
        creates: "~/.local/share/gnome-shell/extensions/{{ item.name }}/{{ item.version }}"
        remote_src: yes
      with_items:
        - "{{ gnome_extensions }}"
      when: item.url != ""
    - name: Create extensions version file
      file:
        path: "~/.local/share/gnome-shell/extensions/{{ item.name }}/{{ item.version }}"
        state: touch
      changed_when: false
      with_items:
        - "{{ gnome_extensions }}"
      when: item.url != ""
    - name: Enable extensions
      dconf:
        key: "/org/gnome/shell/enabled-extensions"
        value: "{{ a | string }}"
        state: present
      vars:
        a: "{{ gnome_extensions | map(attribute='name') | list }}"
    - name: Do not update dnf metadata in background
      lineinfile:
        path: /etc/dnf/dnf.conf
        regexp: ^metadata_timer_sync=
        line: metadata_timer_sync=0
      become: yes
    - name: Set bash line format
      lineinfile:
        path: ~/.bashrc
        regexp: ^PS1=
        line: |
            PS1="[\[\e[96m\]\u\[\e[0m\]: \W\$(git branch 2> /dev/null | grep \-e '\* ' | sed 's/^..\(.*\)/ \[\e[92m\](\1)\[\e[0m\]/')]\$ "

