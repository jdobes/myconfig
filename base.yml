---
- hosts: all
  vars:
    gnome_extensions:
      - name: "alternate-tab@gnome-shell-extensions.gcampax.github.com"
        url: ""
      - name: "places-menu@gnome-shell-extensions.gcampax.github.com"
        url: ""
      - name: "user-theme@gnome-shell-extensions.gcampax.github.com"
        url: ""
      - name: "apps-menu@gnome-shell-extensions.gcampax.github.com"
        url: ""
      - name: "nohotcorner@azuri.free.fr"
        url: "https://extensions.gnome.org/extension-data/nohotcorner@azuri.free.fr.v18.shell-extension.zip"
      - name: "Move_Clock@rmy.pobox.com"
        url: "https://extensions.gnome.org/extension-data/Move_Clock@rmy.pobox.com.v18.shell-extension.zip"
      - name: "dash-to-dock@micxgx.gmail.com"
        url: "https://extensions.gnome.org/extension-data/dash-to-dock@micxgx.gmail.com.v64.shell-extension.zip"
      - name: "no-title-bar@franglais125.gmail.com"
        url: "https://extensions.gnome.org/extension-data/no-title-bar@franglais125.gmail.com.v9.shell-extension.zip"
  tasks:
    - name: Get Fedora version
      shell: rpm -E %fedora
      args:
        warn: false
      changed_when: false
      register: fedora_version
    - name: Add RPM Fusion repo
      dnf:
        name:
          - https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-{{ fedora_version.stdout }}.noarch.rpm
          - https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-{{ fedora_version.stdout }}.noarch.rpm
        state: present
      become: yes
    - name: Add google-chrome repo
      yum_repository:
        name: google-chrome
        description: google-chrome repo
        baseurl: http://dl.google.com/linux/chrome/rpm/stable/x86_64
        gpgcheck: yes
        gpgkey: https://dl.google.com/linux/linux_signing_key.pub
      become: yes
    - name: Upgrade all packages
      dnf:
        name: "*"
        state: latest
      become: yes
    - name: Remove packages
      dnf:
        name:
          - PackageKit-glib
        state: absent
      become: yes
    - name: Install packages
      dnf:
        name:
          - firefox
          - google-chrome-stable
          - vlc
          - terminator
          - vim
          - virt-manager
          - libvirt
          - qemu-kvm
          - gimp
          - inkscape
          - gnome-tweaks
          - azureus
          - gparted
          - wine
          - libselinux-python
          - f29-backgrounds-extras-gnome
        state: present
      become: yes
    - name: Enable and start sshd
      systemd:
        name: sshd
        state: started
        enabled: yes
      become: yes
    - name: Ensure group libvirt exists
      group:
        name: libvirt
        state: present
      become: yes
    - name: Add {{ lookup('env','USER') }} to libvirt group
      user:
        name: "{{ lookup('env','USER') }}"
        groups: libvirt
        append: yes
      become: yes
    - name: Setup keyboard layouts
      dconf:
        key: "/org/gnome/desktop/input-sources/sources"
        value: "[('xkb', 'cz'), ('xkb', 'us')]"
        state: present
    - name: Disable auto screen lock
      dconf:
        key: "/org/gnome/desktop/screensaver/lock-enabled"
        value: "false"
        state: present
    - name: Show battery percentage
      dconf:
        key: "/org/gnome/desktop/interface/show-battery-percentage"
        value: "true"
        state: present
      when: false # not displayed correctly, disable for now
    - name: Set clock format
      dconf:
        key: "/org/gnome/desktop/interface/clock-format"
        value: "'12h'"
        state: present
    - name: Create local extensions directory
      file:
        path: ~/.local/share/gnome-shell/extensions
        state: directory
    - name: Create extensions subdirs
      file:
        path: "~/.local/share/gnome-shell/extensions/{{ item.name }}"
        state: directory
      with_items:
        - "{{ gnome_extensions }}"
      when: item.url != ""
    - name: Download extensions
      unarchive:
        src: "{{ item.url }}"
        dest: "~/.local/share/gnome-shell/extensions/{{ item.name }}"
        remote_src: yes
      with_items:
        - "{{ gnome_extensions }}"
      when: item.url != ""
    - name: Enable extensions
      dconf:
        key: "/org/gnome/shell/enabled-extensions"
        value: "{{ a }}"
        state: present
      vars:
        a: "{{ gnome_extensions | map(attribute='name') | list }}"
    - name: Set bash line format
      lineinfile:
        path: ~/.bashrc
        regexp: ^PS1=
        line: |
            PS1="[\[\e[96m\]\u\[\e[0m\]: \W\$(git branch 2> /dev/null | grep \-e '\* ' | sed 's/^..\(.*\)/ \[\e[92m\](\1)\[\e[0m\]/')]\$ "

