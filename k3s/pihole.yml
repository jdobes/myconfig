---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pihole-etc
  namespace: pihole
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: local-path
  resources:
    requests:
      storage: 512Mi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pihole-dnsmasq
  namespace: pihole
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: local-path
  resources:
    requests:
      storage: 512Mi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pihole
  namespace: pihole
  labels:
    app: pihole
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pihole
  template:
    metadata:
      labels:
        app: pihole
        name: pihole
    spec:
      containers:
      - name: pihole
        image: pihole/pihole:v5.0
        imagePullPolicy: Always
        env:
        - name: TZ
          value: "Europe/Prague"
        - name: WEBPASSWORD
          value: "1234"
        - name: DNS1
          value: 1.1.1.1
        - name: DNS2
          value: 1.0.0.1
        volumeMounts:
        - name: pihole-etc-volume
          mountPath: "/etc/pihole"
        - name: pihole-dnsmasq-volume
          mountPath: "/etc/dnsmasq.d"
      volumes:
      - name: pihole-etc-volume
        persistentVolumeClaim:
          claimName: pihole-etc
      - name: pihole-dnsmasq-volume
        persistentVolumeClaim:
          claimName: pihole-dnsmasq

---
apiVersion: v1
kind: Service
metadata:
  name: pihole-dns
  namespace: pihole
  labels:
    app: pihole
spec:
  selector:
    app: pihole
  ports:
  - port: 53
    targetPort: 53
    protocol: TCP
    name: dns-tcp
  - port: 53
    targetPort: 53
    protocol: UDP
    name: dns-udp
  externalIPs:
  - 192.168.0.2

---
apiVersion: v1
kind: Service
metadata:
  name: pihole-admin
  namespace: pihole
  labels:
    app: pihole
spec:
  selector:
    app: pihole
  ports:
  - port: 80
    targetPort: 80
    name: pihole-admin

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: pihole-ingress
  namespace: pihole
  annotations:
    kubernetes.io/ingress.class: traefik
  labels:
    app: pihole
spec:
  rules:
  - host: pihole.home.owny.cz
    http:
      paths:
      - path: /
        backend:
          serviceName: pihole-admin
          servicePort: 80
